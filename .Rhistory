myData
myControl<-trainControl(method='cv', number=5, classProbs=TRUE, summaryFunction=twoClassSummary);
myModel<-train(Selected~Ranking, myData,method="knn", trControl=myControl);
myData <- data.frame(c(4,3,5,3,6,2,1,7,8,2), c(FALSE,TRUE,FALSE,TRUE,FALSE,TRUE,TRUE,FALSE,FALSE,TRUE));
colnames(myData)<-c("Ranking","Selected");
myControl<-trainControl(method='cv', number=5, classProbs=TRUE, summaryFunction=twoClassSummary);
myModel<-train(Selected~Ranking, myData,method="knn", trControl=myControl);
myData <- data.frame(c(4,3,5,3,6,2,1,7,8,2), make.names(c(FALSE,TRUE,FALSE,TRUE,FALSE,TRUE,TRUE,FALSE,FALSE,TRUE)));
colnames(myData)<-c("Ranking","Selected");
myControl<-trainControl(method='cv', number=5, classProbs=TRUE, summaryFunction=twoClassSummary);
myModel<-train(Selected~Ranking, myData,method="knn", trControl=myControl);
warnings()
myData <- data.frame(c(4,3,5,3,6,2,1,7,8,2), make.names(c(FALSE,TRUE,FALSE,TRUE,FALSE,TRUE,TRUE,FALSE,FALSE,TRUE)));
colnames(myData)<-c("Ranking","Selected");
myFolds <- createFolds(myData$Ranking, k=5);
myControl<-trainControl(index=myFolds, classProbs=TRUE, summaryFunction=twoClassSummary);
myKnnModel<-train(Selected~Ranking, myData,method="knn", trControl=myControl);
myRFModel<-train(Selected~Ranking, myData,method="rf", trControl=myControl);
myControl<-trainControl(index=myFolds, classProbs=TRUE, summaryFunction=twoClassSummary);
myKnnModel<-train(Selected~Ranking, myData,method="knn", trControl=myControl);
myData <- data.frame(as.numeric(c(4,3,5,3,6,2,1,7,8,2)), make.names(c(FALSE,TRUE,FALSE,TRUE,FALSE,TRUE,TRUE,FALSE,FALSE,TRUE)));
colnames(myData)<-c("Ranking","Selected");
myFolds <- createFolds(myData$Ranking, k=5);
myControl<-trainControl(index=myFolds, classProbs=TRUE, summaryFunction=twoClassSummary);
myKnnModel<-train(Selected~Ranking, myData,method="knn", trControl=myControl);
myFolds <- createFolds(myData$Ranking, k=10);
myControl<-trainControl(index=myFolds, classProbs=TRUE, summaryFunction=twoClassSummary);
myKnnModel<-train(Selected~Ranking, myData,method="knn", trControl=myControl);
myFolds <- createFolds(myData$Ranking, k=2);
myControl<-trainControl(index=myFolds, classProbs=TRUE, summaryFunction=twoClassSummary);
myKnnModel<-train(Selected~Ranking, myData,method="knn", trControl=myControl);
myFolds <- createFolds(myData$Ranking, k=4);
myControl<-trainControl(index=myFolds, classProbs=TRUE, summaryFunction=twoClassSummary);
myKnnModel<-train(Selected~Ranking, myData,method="knn", trControl=myControl);
myFolds <- createFolds(myData$Ranking, k=6);
myControl<-trainControl(index=myFolds, classProbs=TRUE, summaryFunction=twoClassSummary);
myKnnModel<-train(Selected~Ranking, myData,method="knn", trControl=myControl);
myControl<-trainControl(index=myFolds, classProbs=TRUE, summaryFunction=twoClassSummary);
myKnnModel<-train(Selected~Ranking, myData,method="knn", trControl=myControl);
myRFModel<-train(Selected~Ranking, myData,method="rf", trControl=myControl);
myData <- data.frame(c(4,3,5,3,6,2,1,7,8,2), make.names(c(FALSE,TRUE,FALSE,TRUE,FALSE,TRUE,TRUE,FALSE,FALSE,TRUE)));
colnames(myData)<-c("Ranking","Selected");
myFolds <- createFolds(myData$Ranking, k=4);
myControl<-trainControl(index=myFolds, classProbs=TRUE, summaryFunction=twoClassSummary);
myKnnModel<-train(Selected~Ranking, myData,method="knn", trControl=myControl);
myRFModel<-train(Selected~Ranking, myData,method="rf", trControl=myControl);
myData <- data.frame(c(4,3,5,3,6,2,1,7,8,2), make.names(c(FALSE,TRUE,FALSE,TRUE,FALSE,TRUE,TRUE,FALSE,FALSE,TRUE)));
colnames(myData)<-c("Ranking","Selected");
myFolds <- createFolds(myData$Ranking, k=2);
myControl<-trainControl(index=myFolds, classProbs=TRUE, summaryFunction=twoClassSummary);
myKnnModel<-train(Selected~Ranking, myData,method="knn", trControl=myControl);
myData <- data.frame(c(4,3,5,3,6,2,1,7,8,2), make.names(c(FALSE,TRUE,FALSE,TRUE,FALSE,TRUE,TRUE,FALSE,FALSE,TRUE)));
colnames(myData)<-c("Ranking","Selected");
myFolds <- createFolds(myData$Ranking, k=4);
myControl<-trainControl(index=myFolds, classProbs=TRUE, summaryFunction=twoClassSummary);
myKnnModel<-train(Selected~Ranking, myData,method="knn", trControl=myControl);
myData <- data.frame(c(4,3,5,3,6,2,1,7,8,2), make.names(c(FALSE,TRUE,FALSE,TRUE,FALSE,TRUE,TRUE,FALSE,FALSE,TRUE)));
colnames(myData)<-c("Ranking","Selected");
myFolds <- createFolds(myData$Ranking, k=4);
myControl<-trainControl(index=myFolds, classProbs=TRUE, summaryFunction=twoClassSummary);
myKnnModel<-train(Selected~Ranking, myData,method="knn", trControl=myControl);
myData <- data.frame(c(4,3,5,3,6,2,1,7,8,2), make.names(c(FALSE,TRUE,FALSE,TRUE,FALSE,TRUE,TRUE,FALSE,FALSE,TRUE)));
colnames(myData)<-c("Ranking","Selected");
myFolds <- createFolds(myData$Ranking, k=4);
myControl<-trainControl(index=myFolds, classProbs=TRUE, summaryFunction=twoClassSummary);
myKnnModel<-train(Selected~Ranking, myData,method="knn", trControl=myControl);
myFolds <- createFolds(myData$Ranking, k=3);
myControl<-trainControl(index=myFolds, classProbs=TRUE, summaryFunction=twoClassSummary);
myKnnModel<-train(Selected~Ranking, myData,method="knn", trControl=myControl);
myRFModel<-train(Selected~Ranking, myData,method="rf", trControl=myControl);
myKnnModel<-train(Selected~Ranking, myData,method="knn", trControl=myControl);
myRFModel<-train(Selected~Ranking, myData,method="rf", trControl=myControl);
xplot(myKnnModel,myRFModel)
resampleList<-resamples(list(item1=myKnnModel,item2=myRFModel))
xplot(resamples,metric="ROC")
bwplot(resamples,metric="ROC")
bwplot(resampleList,metric="ROC")
xplot(resampleList,metric="ROC")
densityplot(resampleList,metric="ROC")
dotplot(resampleList,metric="ROC")
?dotplot
xyplot(resampleList,metric="ROC")
dotplot(resampleList,top=2,metric="ROC")
dotplot(resampleList,top=3,metric="ROC")
resampleList<-resamples(list(item2=myKnnModel,item1=myRFModel))
bwplot(resampleList,metric="ROC")
densityplot(resampleList,metric="ROC")
dotplot(resampleList,top=3,metric="ROC")
bwplot(resampleList,metric="ROC")
dotplot(resampleList,top=3,metric="ROC")
xyplot(resampleList,xlim=range(0,1.5), metric="ROC")
dotplot(resampleList,top=3,xlim=range(0,1.5),metric="ROC")
dotplot(resampleList,xlim=range(0,1.5),metric="ROC")
dotplot(resampleList,xlim=range(0,2.5),metric="ROC")
dotplot(resampleList,xlim=range(0,5.5),metric="ROC")
dotplot(resampleList,xlim=range(-1,5.5),metric="ROC")
xyplot(resampleList,xlim=range(0,1.5), metric="ROC")
bwplot(resampleList,metric="ROC")
myControl<-trainControl(index=myFolds, classProbs=TRUE, summaryFunction=twoClassSummary);
myKnnModel<-train(Selected~Ranking, myData,method="knn", trControl=myControl);
myRFModel<-train(Selected~Ranking, myData,method="rf", trControl=myControl);
warning()
warnings()
myRFModel<-train(Selected~Ranking, myData,method="glm", trControl=myControl);
bwplot(resampleList,metric="ROC")
densityplot(resampleList,metric="ROC")
dotplot(resampleList,xlim=range(-1,5.5),metric="ROC")
xyplot(resampleList,xlim=range(0,1.5), metric="ROC")
myData <- data.frame(c(4,3,5,3,6,2,1,7,8,2), make.names(c(FALSE,TRUE,FALSE,TRUE,FALSE,TRUE,TRUE,FALSE,FALSE,TRUE)));
colnames(myData)<-c("Ranking","Selected");
myFolds <- createFolds(myData$Ranking, k=3);
myControl<-trainControl(index=myFolds, classProbs=TRUE, summaryFunction=twoClassSummary);
myKnnModel<-train(Selected~Ranking, myData,method="knn", trControl=myControl);
myRFModel<-train(Selected~Ranking, myData,method="glm", trControl=myControl);
resampleList<-resamples(list(item2=myKnnModel,item1=myRFModel))
myData <- data.frame(c(4,3,5,3,6,2,1,7,8,2), make.names(c(FALSE,TRUE,FALSE,TRUE,FALSE,TRUE,TRUE,FALSE,FALSE,TRUE)));
colnames(myData)<-c("Ranking","Selected");
myFolds <- createFolds(myData$Ranking, k=3);
myControl<-trainControl(index=myFolds, classProbs=TRUE, summaryFunction=twoClassSummary);
myKnnModel<-train(Selected~Ranking, myData,method="knn", trControl=myControl);
myRFModel<-train(Selected~Ranking, myData,method="glm", trControl=myControl);
resampleList<-resamples(list(item2=myKnnModel,item1=myRFModel))
myData <- data.frame(c(4,3,5,3,6,2,1,7,8,2), make.names(c(FALSE,TRUE,FALSE,TRUE,FALSE,TRUE,TRUE,FALSE,FALSE,TRUE)));
colnames(myData)<-c("Ranking","Selected");
myFolds <- createFolds(myData$Ranking, k=3);
myControl<-trainControl(index=myFolds, classProbs=TRUE, summaryFunction=twoClassSummary);
myKnnModel<-train(Selected~Ranking, myData,method="knn", trControl=myControl);
myRFModel<-train(Selected~Ranking, myData,method="glm", trControl=myControl);
resampleList<-resamples(list(item2=myKnnModel,item1=myRFModel))
bwplot(resampleList,metric="ROC")
#
myData <- data.frame(c(4,3,5,3,6,2,1,7,8,2), make.names(c(FALSE,TRUE,FALSE,TRUE,FALSE,TRUE,TRUE,FALSE,FALSE,TRUE)));
colnames(myData)<-c("Ranking","Selected");
myFolds <- createFolds(myData$Ranking, k=3);
myControl<-trainControl(index=myFolds, classProbs=TRUE, summaryFunction=twoClassSummary);
knnModel<-train(Selected~Ranking, myData,method="knn", trControl=myControl);
glmModel<-train(Selected~Ranking, myData,method="glm", trControl=myControl);
resampleList<-resamples(list(knnModel,glmModel))
bwplot(resampleList,metric="ROC")
myData <- data.frame(c(4,3,5,3,6,2,1,7,8,2), make.names(c(FALSE,TRUE,FALSE,TRUE,FALSE,TRUE,TRUE,FALSE,FALSE,TRUE)));
colnames(myData)<-c("Ranking","Selected");
myFolds <- createFolds(myData$Ranking, k=3);
myControl<-trainControl(index=myFolds, classProbs=TRUE, summaryFunction=twoClassSummary);
rfModel<-train(Selected~Ranking, myData,method="rf", trControl=myControl);
glmModel<-train(Selected~Ranking, myData,method="glm", trControl=myControl);
resampleList<-resamples(list(rfModel,glmModel))
bwplot(resampleList,metric="ROC")
densityplot(resampleList,metric="ROC")
dotplot(resampleList,xlim=range(-1,5.5),metric="ROC")
xyplot(resampleList,xlim=range(0,1.5), metric="ROC")
myModel
glmModel
rfModel
knnModel<-train(Selected~Ranking, myData,method="knn", trControl=myControl);
knnModel
resampleList<-resamples(list(rfModel,glmModel,knnModel))
bwplot(resampleList,metric="ROC")
resampleList<-resamples(list(rfModel=rfModel,glmModel=glmModel,knnModel=knnModel))
bwplot(resampleList,metric="ROC")
xyplot(resampleList,xlim=range(0,1.5), metric="ROC")
dotplot(resampleList,xlim=range(-1,5.5),metric="ROC")
bwplot(resampleList,metric="ROC")
dotplot(resampleList,xlim=range(-1,5.5),metric="ROC")
bwplot(resampleList,metric="ROC")
glmModel<-train(Selected~Ranking, myData,method="glmnet", trControl=myControl);
glmModel<-train(Selected~Ranking, myData,method="glmnet", trControl=myControl);
knnModel
myData <- data.frame(c(4,3,5,3,9,2,1,7,10,2,8,4), make.names(c(FALSE,TRUE,FALSE,TRUE,FALSE,TRUE,TRUE,FALSE,FALSE,TRUE,FALSE,TRUE)));
colnames(myData)<-c("Ranking","Selected");
myFolds <- createFolds(myData$Ranking, k=3);
library(caret)
myFolds <- createFolds(myData$Ranking, k=3);
myFolds <- createFolds(myData$Ranking, k=4);
myFolds <- createFolds(myData$Ranking, k=5);
myControl<-trainControl(index=myFolds, classProbs=TRUE, summaryFunction=twoClassSummary);
knnModel<-train(Selected~Ranking, myData,method="knn", trControl=myControl);
myFolds <- createFolds(myData$Ranking, k=4);
myControl<-trainControl(index=myFolds, classProbs=TRUE, summaryFunction=twoClassSummary);
knnModel<-train(Selected~Ranking, myData,method="knn", trControl=myControl);
rfModel<-train(Selected~Ranking, myData,method="rf", trControl=myControl);
glmModel<-train(Selected~Ranking, myData,method="glm", trControl=myControl);
glmModel
rfModel
knnModel
resampleList<-resamples(list(rfModel=rfModel,glmModel=glmModel,knnModel=knnModel))
bwplot(resampleList,metric="ROC")
myData <- data.frame(c(4,3,5,3,9,2,1,7,10,2,8,4,1), make.names(c(FALSE,TRUE,FALSE,TRUE,FALSE,TRUE,TRUE,FALSE,FALSE,TRUE,FALSE,TRUE,FALSE)));
colnames(myData)<-c("Ranking","Selected");
myFolds <- createFolds(myData$Ranking, k=4);
myControl<-trainControl(index=myFolds, classProbs=TRUE, summaryFunction=twoClassSummary);
knnModel<-train(Selected~Ranking, myData,method="knn", trControl=myControl);
rfModel<-train(Selected~Ranking, myData,method="rf", trControl=myControl);
glmModel<-train(Selected~Ranking, myData,method="glm", trControl=myControl);
resampleList<-resamples(list(rfModel=rfModel,glmModel=glmModel,knnModel=knnModel))
bwplot(resampleList,metric="ROC")
densityplot(resampleList,metric="ROC")
dotplot(resampleList,xlim=range(-1,5.5),metric="ROC")
dotplot(resampleList,xlim=range(0,1),metric="ROC")
xyplot(resampleList,xlim=range(0,1), metric="ROC")
library(caret)
myData <- data.frame(c(4,3,5,3,9,2,1,7,10,2,8,4,1),
make.names(c(FALSE,TRUE,FALSE,TRUE,FALSE,TRUE,TRUE,FALSE,FALSE,TRUE,FALSE,TRUE,FALSE)));
colnames(myData)<-c("Ranking","Selected");
myFolds <- createFolds(myData$Ranking, k=5);
myControl<-trainControl(index=myFolds, classProbs=TRUE, summaryFunction=twoClassSummary);
knnModel<-train(Selected~Ranking, myData,method="knn", trControl=myControl);
myData <- data.frame(c(4,3,5,3,9,2,1,7,10,2,8,4,1,3),
make.names(c(FALSE,TRUE,FALSE,TRUE,FALSE,TRUE,TRUE,FALSE,FALSE,TRUE,FALSE,TRUE,FALSE,TRUE)));
colnames(myData)<-c("Ranking","Selected");
myFolds <- createFolds(myData$Ranking, k=5);
myControl<-trainControl(index=myFolds, classProbs=TRUE, summaryFunction=twoClassSummary);
knnModel<-train(Selected~Ranking, myData,method="knn", trControl=myControl);
svmModel<-train(Selected~Ranking, myData,method="svmRadial", trControl=myControl);
library(caret)
myData <- data.frame(c(4,3,5,3,9,2,1,7,10,2,8,4,1,3),
make.names(c(FALSE,TRUE,FALSE,TRUE,FALSE,TRUE,TRUE,FALSE,FALSE,TRUE,FALSE,TRUE,FALSE,TRUE)));
colnames(myData)<-c("Ranking","Selected");
myFolds <- createFolds(myData$Ranking, k=5);
set.seed(1234);
myControl<-trainControl(index=myFolds, classProbs=TRUE, summaryFunction=twoClassSummary);
svmModel<-train(Selected~Ranking, myData,method="svmRadial", trControl=myControl);
svnModel
svmModel
resampleList<-resamples(list(rf=rfModel,glm=glmModel,knn=knnModel, svm=svmModel))
svmModel<-train(Selected~Ranking, myData,method="svmRadial", trControl=myControl);
resampleList<-resamples(list(rf=rfModel,glm=glmModel,knn=knnModel, svm=svmModel))
bwplot(resampleList,metric="ROC")
library(caret)
myData <- data.frame(c(4,3,5,3,9,2,1,7,10,2,8,4,1,3),
make.names(c(FALSE,TRUE,FALSE,TRUE,FALSE,TRUE,TRUE,FALSE,FALSE,TRUE,FALSE,TRUE,FALSE,TRUE)));
colnames(myData)<-c("Ranking","Selected");
myFolds <- createFolds(myData$Ranking, k=5);
set.seed(1234);
myControl<-trainControl(index=myFolds, classProbs=TRUE, summaryFunction=twoClassSummary);
knnModel<-train(Selected~Ranking, myData,method="knn", trControl=myControl);
rfModel<-train(Selected~Ranking, myData,method="rf", trControl=myControl);
glmModel<-train(Selected~Ranking, myData,method="glm", trControl=myControl);
svmModel<-train(Selected~Ranking, myData,method="svmRadial", trControl=myControl);
glmModel
rfModel
knnModel
svmModel
#Visualize models
resampleList<-resamples(list(rf=rfModel,glm=glmModel,knn=knnModel, svm=svmModel))
bwplot(resampleList,metric="ROC")
resampleList<-resamples(list(rf=rfModel,glm=glmModel,knn=knnModel))
knnModel<-train(Selected~Ranking, myData,method="knn", trControl=myControl);
library(caret)
myData <- data.frame(c(4,3,5,3,9,2,1,7,10,2,8,4,1,3),
make.names(c(FALSE,TRUE,FALSE,TRUE,FALSE,TRUE,TRUE,FALSE,FALSE,TRUE,FALSE,TRUE,FALSE,TRUE)));
colnames(myData)<-c("Ranking","Selected");
myFolds <- createFolds(myData$Ranking, k=5);
set.seed(1234);
myControl<-trainControl(index=myFolds, classProbs=TRUE, summaryFunction=twoClassSummary);
knnModel<-train(Selected~Ranking, myData,method="knn", trControl=myControl);
library(caret)
myData <- data.frame(c(4,3,5,3,9,2,1,7,10,2,8,4,1,3,5),
make.names(c(FALSE,TRUE,FALSE,TRUE,FALSE,TRUE,TRUE,FALSE,FALSE,TRUE,FALSE,TRUE,FALSE,TRUE,FALSE)));
colnames(myData)<-c("Ranking","Selected");
myFolds <- createFolds(myData$Ranking, k=5);
set.seed(1234);
myControl<-trainControl(index=myFolds, classProbs=TRUE, summaryFunction=twoClassSummary);
knnModel<-train(Selected~Ranking, myData,method="knn", trControl=myControl);
rfModel<-train(Selected~Ranking, myData,method="rf", trControl=myControl);
glmModel<-train(Selected~Ranking, myData,method="glm", trControl=myControl);
svmModel<-train(Selected~Ranking, myData,method="svmRadial", trControl=myControl);
glmModel
rfModel
knnModel
svmModel
resampleList<-resamples(list(rf=rfModel,glm=glmModel,knn=knnModel))
resampleList<-resamples(list(rf=rfModel,glm=glmModel,knn=knnModel, svm=svmModel))
bwplot(resampleList,metric="ROC")
library(caret)
myData <- data.frame(c(4,3,5,3,9,2,1,7,10,2,8,4,1,3,5),
make.names(c(FALSE,TRUE,FALSE,TRUE,FALSE,TRUE,TRUE,FALSE,FALSE,TRUE,FALSE,TRUE,FALSE,TRUE,FALSE)));
colnames(myData)<-c("Ranking","Selected");
myFolds <- createFolds(myData$Ranking, k=5);
set.seed(1234);
myControl<-trainControl(index=myFolds, classProbs=TRUE, summaryFunction=twoClassSummary);
knnModel<-train(Selected~Ranking, myData,method="knn", trControl=myControl);
knnModel
myFolds <- createFolds(myData$Ranking, k=10);
set.seed(1234);
myControl<-trainControl(index=myFolds, classProbs=TRUE, summaryFunction=twoClassSummary);
knnModel<-train(Selected~Ranking, myData,method="knn", trControl=myControl);
myFolds <- createFolds(myData$Ranking, k=6);
set.seed(1234);
myControl<-trainControl(index=myFolds, classProbs=TRUE, summaryFunction=twoClassSummary);
knnModel<-train(Selected~Ranking, myData,method="knn", trControl=myControl);
knnModel
rfModel<-train(Selected~Ranking, myData,method="rf", trControl=myControl);
glmModel<-train(Selected~Ranking, myData,method="glm", trControl=myControl);
svmModel<-train(Selected~Ranking, myData,method="svmRadial", trControl=myControl);
glmModel
rfModel
knnModel
svmModel
resampleList<-resamples(list(rf=rfModel,glm=glmModel,knn=knnModel, svm=svmModel))
bwplot(resampleList,metric="ROC")
svmModel
myFolds <- createFolds(myData$Ranking, k=5);
set.seed(1234);
myControl<-trainControl(index=myFolds, classProbs=TRUE, summaryFunction=twoClassSummary);
knnModel<-train(Selected~Ranking, myData,method="knn", trControl=myControl);
rfModel<-train(Selected~Ranking, myData,method="rf", trControl=myControl);
glmModel<-train(Selected~Ranking, myData,method="glm", trControl=myControl);
svmModel<-train(Selected~Ranking, myData,method="svmRadial", trControl=myControl);
resampleList<-resamples(list(rf=rfModel,glm=glmModel,knn=knnModel, svm=svmModel))
bwplot(resampleList,metric="ROC")
myFolds <- createFolds(myData$Ranking, k=7);
set.seed(1234);
myControl<-trainControl(index=myFolds, classProbs=TRUE, summaryFunction=twoClassSummary);
knnModel<-train(Selected~Ranking, myData,method="knn", trControl=myControl);
rfModel<-train(Selected~Ranking, myData,method="rf", trControl=myControl);
glmModel<-train(Selected~Ranking, myData,method="glm", trControl=myControl);
svmModel<-train(Selected~Ranking, myData,method="svmRadial", trControl=myControl);
glmModel
rfModel
knnModel
svmModel
resampleList<-resamples(list(rf=rfModel,glm=glmModel,knn=knnModel, svm=svmModel))
bwplot(resampleList,metric="ROC")
myFolds <- createFolds(myData$Ranking, k=8);
set.seed(1234);
myControl<-trainControl(index=myFolds, classProbs=TRUE, summaryFunction=twoClassSummary);
knnModel<-train(Selected~Ranking, myData,method="knn", trControl=myControl);
rfModel<-train(Selected~Ranking, myData,method="rf", trControl=myControl);
glmModel<-train(Selected~Ranking, myData,method="glm", trControl=myControl);
svmModel<-train(Selected~Ranking, myData,method="svmRadial", trControl=myControl);
resampleList<-resamples(list(rf=rfModel,glm=glmModel,knn=knnModel, svm=svmModel))
myFolds <- createFolds(myData$Ranking, k=6);
set.seed(1234);
myControl<-trainControl(index=myFolds, classProbs=TRUE, summaryFunction=twoClassSummary);
knnModel<-train(Selected~Ranking, myData,method="knn", trControl=myControl);
rfModel<-train(Selected~Ranking, myData,method="rf", trControl=myControl);
glmModel<-train(Selected~Ranking, myData,method="glm", trControl=myControl);
svmModel<-train(Selected~Ranking, myData,method="svmRadial", trControl=myControl);
glmModel
myFolds <- createFolds(myData$Ranking, k=5);
set.seed(1234);
myControl<-trainControl(index=myFolds, classProbs=TRUE, summaryFunction=twoClassSummary);
knnModel<-train(Selected~Ranking, myData,method="knn", trControl=myControl);
rfModel<-train(Selected~Ranking, myData,method="rf", trControl=myControl);
glmModel<-train(Selected~Ranking, myData,method="glm", trControl=myControl);
svmModel<-train(Selected~Ranking, myData,method="svmRadial", trControl=myControl);
glmModel
myFolds <- createFolds(myData$Ranking, k=6);
set.seed(1234);
myControl<-trainControl(index=myFolds, classProbs=TRUE, summaryFunction=twoClassSummary);
knnModel<-train(Selected~Ranking, myData,method="knn", trControl=myControl);
rfModel<-train(Selected~Ranking, myData,method="rf", trControl=myControl);
glmModel<-train(Selected~Ranking, myData,method="glm", trControl=myControl);
svmModel<-train(Selected~Ranking, myData,method="svmRadial", trControl=myControl);
glmModel
myFolds <- createFolds(myData$Ranking, k=7);
set.seed(1234);
myControl<-trainControl(index=myFolds, classProbs=TRUE, summaryFunction=twoClassSummary);
glmModel<-train(Selected~Ranking, myData,method="glm", trControl=myControl);
glmModel
resampleList<-resamples(list(rf=rfModel,glm=glmModel,knn=knnModel, svm=svmModel))
bwplot(resampleList,metric="ROC")
knnModel<-train(Selected~Ranking, myData,method="knn", trControl=myControl);
rfModel<-train(Selected~Ranking, myData,method="rf", trControl=myControl);
glmModel<-train(Selected~Ranking, myData,method="glm", trControl=myControl);
svmModel<-train(Selected~Ranking, myData,method="svmRadial", trControl=myControl);
resampleList<-resamples(list(rf=rfModel,glm=glmModel,knn=knnModel, svm=svmModel))
bwplot(resampleList,metric="ROC")
myFolds <- createFolds(myData$Ranking, k=7);
set.seed(1234);
myControl<-trainControl(index=myFolds, classProbs=TRUE, summaryFunction=twoClassSummary);
knnModel<-train(Selected~Ranking, myData,method="knn", trControl=myControl);
rfModel<-train(Selected~Ranking, myData,method="rf", trControl=myControl);
glmModel<-train(Selected~Ranking, myData,method="glm", trControl=myControl);
svmModel<-train(Selected~Ranking, myData,method="svmRadial", trControl=myControl);
resampleList<-resamples(list(rf=rfModel,glm=glmModel,knn=knnModel, svm=svmModel))
bwplot(resampleList,metric="ROC")
myFolds <- createFolds(myData$Ranking, k=7);
set.seed(1234);
myControl<-trainControl(index=myFolds, classProbs=TRUE, summaryFunction=twoClassSummary);
knnModel<-train(Selected~Ranking, myData,method="knn", trControl=myControl);
rfModel<-train(Selected~Ranking, myData,method="rf", trControl=myControl);
glmModel<-train(Selected~Ranking, myData,method="glm", trControl=myControl);
svmModel<-train(Selected~Ranking, myData,method="svmRadial", trControl=myControl);
resampleList<-resamples(list(rf=rfModel,glm=glmModel,knn=knnModel, svm=svmModel))
bwplot(resampleList,metric="ROC")
glmModel
densityplot(resampleList,metric="ROC")
dotplot(resampleList,xlim=range(0,1),metric="ROC")
xyplot(resampleList,xlim=range(0,1), metric="ROC")
myFolds <- createFolds(myData$Ranking, k=4);
set.seed(1234);
myControl<-trainControl(index=myFolds, classProbs=TRUE, summaryFunction=twoClassSummary);
glmModel<-train(Selected~Ranking, myData,method="glm", trControl=myControl);
glmModel
myFolds <- createFolds(myData$Ranking, k=3);
set.seed(1234);
myControl<-trainControl(index=myFolds, classProbs=TRUE, summaryFunction=twoClassSummary);
myFolds <- createFolds(myData$Ranking, k=3);
set.seed(1234);
myControl<-trainControl(index=myFolds, classProbs=TRUE, summaryFunction=twoClassSummary);
glmModel<-train(Selected~Ranking, myData,method="glm", trControl=myControl);
glmModel
myFolds <- createFolds(myData$Ranking, k=5);
set.seed(1234);
myControl<-trainControl(index=myFolds, classProbs=TRUE, summaryFunction=twoClassSummary);
myFolds <- createFolds(myData$Ranking, k=2);
set.seed(1234);
myControl<-trainControl(index=myFolds, classProbs=TRUE, summaryFunction=twoClassSummary);
glmModel<-train(Selected~Ranking, myData,method="glm", trControl=myControl);
glmModel
myFolds <- createFolds(myData$Ranking, k=4);
set.seed(1234);
myControl<-trainControl(index=myFolds, classProbs=TRUE, summaryFunction=twoClassSummary);
glmModel<-train(Selected~Ranking, myData,method="glm", trControl=myControl);
glmModel
myFolds <- createFolds(myData$Ranking, k=5);
set.seed(1234);
myControl<-trainControl(index=myFolds, classProbs=TRUE, summaryFunction=twoClassSummary);
glmModel<-train(Selected~Ranking, myData,method="glm", trControl=myControl);
glmModel
myFolds <- createFolds(myData$Ranking, k=6);
set.seed(1234);
myControl<-trainControl(index=myFolds, classProbs=TRUE, summaryFunction=twoClassSummary);
glmModel<-train(Selected~Ranking, myData,method="glm", trControl=myControl);
glmModel
myFolds <- createFolds(myData$Ranking, k=7);
set.seed(1234);
myControl<-trainControl(index=myFolds, classProbs=TRUE, summaryFunction=twoClassSummary);
glmModel<-train(Selected~Ranking, myData,method="glm", trControl=myControl);
glmModel
predict(glmModel,myData)
predict?
?predict
predict(myData)
predict(knnModel,myData)
myFolds <- createFolds(myData$Ranking, k=5);
set.seed(1234);
myControl<-trainControl(index=myFolds, classProbs=TRUE, summaryFunction=twoClassSummary);
knnModel<-train(Selected~Ranking, myData,method="knn", trControl=myControl);
rfModel<-train(Selected~Ranking, myData,method="rf", trControl=myControl);
glmModel<-train(Selected~Ranking, myData,method="glm", trControl=myControl);
svmModel<-train(Selected~Ranking, myData,method="svmRadial", trControl=myControl);
predict(glmModel,myData)
source("C://Users//chris//OneDrive//Documentos//GitHub//ML_VotingAggregation//aggregateAnswerOptionsPerQuestion.R");
summaryTable <- runMain();
#summaryTable <- data.frame(summaryTable);
#I need to guarantee that some examples (i.e., failing methods)
#do not dominate the training or testing sets. To do that, I need to get a
#close to equal proportion of examples in both sets
#Scramble the dataset before extracting the training set.
set.seed(8850);
g<- runif((nrow(summaryTable))); #generates a random distribution
summaryTable <- summaryTable[order(g),];
summaryTable<- data.frame(summaryTable, stringsAsFactors = FALSE)
summaryTable[,"rankingVote"] <- as.numeric(unlist(summaryTable[,"rankingVote"]));
summaryTable$bugCoveringLabels <- as.character(summaryTable$bugCovering);
summaryTable$bugCoveringLabels<- replace(summaryTable$bugCoveringLabels,summaryTable$bugCoveringLabels=="FALSE", "F");
summaryTable$bugCoveringLabels<- replace(summaryTable$bugCoveringLabels,summaryTable$bugCoveringLabels=="TRUE", "T");
summaryTable$bugCoveringLabels<- as.factor(summaryTable$bugCoveringLabels);
myFolds <- createFolds(summaryTable[,"rankingVote"] , k = 10);
library(caret)
myFolds <- createFolds(summaryTable[,"rankingVote"] , k = 10);
kFoldControl <- trainControl(
index = myFolds, #Train with 9 folds and validate with one
classProbs = TRUE, # IMPORTANT!
verboseIter = TRUE, #
savePredictions = TRUE, #
summaryFunction = twoClassSummary
);
nb<- train(bugCoveringLabels ~ rankingVote,summaryTable, method="nb", trControl=kFoldControl);
knn <- train(bugCoveringLabels ~ rankingVote,summaryTable, method="knn", trControl=kFoldControl);
knn
knn
knn <- train(bugCoveringLabels ~ rankingVote,summaryTable, method="knn", trControl=kFoldControl);
knn
rf<- train(bugCoveringLabels ~ rankingVote,summaryTable, method="rf", trControl=kFoldControl);
rf
glm<- train(bugCoveringLabels ~ rankingVote,summaryTable, method="glm", trControl=kFoldControl);
glmnet<- train(bugCoveringLabels ~ rankingVote,summaryTable, method="glmnet", trControl=kFoldControl);
bayesglm<- train(bugCoveringLabels ~ rankingVote,summaryTable, method="bayesglm", trControl=kFoldControl);
glm
glmnet
glmBoost
bayesglm
svmLinear <- train(bugCoveringLabels ~ rankingVote,summaryTable, method="svmLinear", trControl=kFoldControl);
svmLinear2 <- train(bugCoveringLabels ~ rankingVote,summaryTable, method="svmLinear2", trControl=kFoldControl);
svmLinearWeights <- train(bugCoveringLabels ~ rankingVote,summaryTable, method="svmLinearWeights", trControl=kFoldControl);
svmLinear
svmLinear2
svmLinearWeights
resampleList<-resamples(list(svmLinear=svmLinear,svmLinear2=svmLinear2,svmLinearWeights=svmLinearWeights,
glm=glm,bayesglm=bayesglm, rf=rf, knn=knn, nb=nb
));
bwplot(resampleList,metric="ROC")
densityplot(resampleList,metric="ROC")
dotplot(resampleList,xlim=range(0,1),metric="ROC")
twoBestList <- resamples(list(glm=glm,bayesglm=bayesglm));
xyplot(twoBestList,xlim=range(0,1), metric="ROC")
predict(bayesglm,summaryTable)
predict(glm,summaryTable)
predict(svmLinear,summaryTable)
predict(rf,summaryTable)
predict(glmnet(),summaryTable)
predict(glmnet,summaryTable)
predict(nn,summaryTable)
predict(knn,summaryTable)
head(summaryTable)
predict(svmLinear,summaryTable$rankingVote)
predict(glmModel,myData$Ranking)
svmLinear <- train(bugCoveringLabels ~ rankingVote,summaryTable, method="svmLinear", trControl=kFoldControl);
svmLinear
